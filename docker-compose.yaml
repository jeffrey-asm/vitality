version: '3.8'

services:
  app:
    image: node:alpine
    working_dir: /app
    volumes:
      - .:/app
      - ./.env:/app/.env
    networks:
      - vitality_network
    ports:
      - "3000:3000"
      - "5555:5555"
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: sh -c "npx prisma generate && npm run dev"
    container_name: vitality_app

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - vitality_network
    ports:
      - "80:80"
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    container_name: vitality_nginx

  postgres: 
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vitality
    volumes:
      - vitality_postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - vitality_network
    healthcheck:
       test: ['CMD', 'pg_isready', '-U', 'postgres', '-d', 'vitality']
       interval: 5s
       timeout: 5s
       retries: 5
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    container_name: vitality_postgres

networks:
  vitality_network:
    driver: bridge

volumes:
  vitality_postgres_data:


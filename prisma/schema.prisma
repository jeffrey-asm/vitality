generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String     @db.VarChar(255)
  birthday      DateTime   @db.Date
  username      String     @unique @db.VarChar(30)
  password      String
  email         String     @unique
  emailverified Boolean    @default(false)
  phone         String?    @unique @db.VarChar(22)
  phoneverified Boolean?   @default(false)
  Tags          Tags[]
  Workouts      Workouts[]
}

model VerificationToken {
  identifier String   @id
  token      String   @unique
  expires    DateTime @db.Timestamp(6)
}

model Feedback {
  id      String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name    String @db.VarChar(255)
  email   String
  message String
}

model Exercises {
  id         String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workout_id String                   @db.Uuid
  title      String?                  @db.VarChar(50)
  weight     Int?
  duration   Unsupported("interval")?
  Workouts   Workouts                 @relation(fields: [workout_id], references: [id], onDelete: Cascade)
}

model Tags {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String         @db.Uuid
  page         String         @db.VarChar(15)
  title        String         @db.VarChar(30)
  color        String?        @default("#D6DBDF") @db.VarChar(7)
  Users        Users          @relation(fields: [user_id], references: [id], onDelete: Cascade)
  Workout_Tags Workout_Tags[]
}

model Workout_Tags {
  workout_id String   @db.Uuid
  tag_id     String   @db.Uuid
  Tags       Tags     @relation(fields: [tag_id], references: [id], onDelete: Cascade)
  Workouts   Workouts @relation(fields: [workout_id], references: [id], onDelete: Cascade)

  @@id([workout_id, tag_id])
}

model Workouts {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String         @db.Uuid
  title        String         @db.VarChar(50)
  date         DateTime       @db.Date
  reflection   String?
  image        String?        @default("DEFAULT")
  Exercises    Exercises[]
  Workout_Tags Workout_Tags[]
  Users        Users          @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
